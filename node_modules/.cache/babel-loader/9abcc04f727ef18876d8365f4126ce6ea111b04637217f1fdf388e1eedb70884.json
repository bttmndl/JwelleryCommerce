{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajiv\\\\Desktop\\\\t_react\\\\t-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport MultipleChoise from './MultipleChoise';\nimport TrueFalse from './TrueFalse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([{\n    question: \"What is the nation animal?\",\n    option: [\"lion\", \"tiger\", \"cheeta\", \"elephant\"],\n    answer: \"\",\n    correct: \"tiger\"\n  }, {\n    question: \"Earth is round ?\",\n    option: [\"true\", \"false\"],\n    answer: \"\",\n    correct: \"false\"\n  }, {\n    question: \"what is the value\"\n  }]);\n  const [page, setPage] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [...Array(5)].map((ele, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header-circle\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: idx + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 54\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), page === 1 && /*#__PURE__*/_jsxDEV(MultipleChoise, {\n      questions: questions,\n      setQuestions: setQuestions,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 20\n    }, this), page === 2 && /*#__PURE__*/_jsxDEV(TrueFalse, {\n      questions: questions,\n      setQuestions: setQuestions,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this), page === 3 && /*#__PURE__*/_jsxDEV(FillTheBlank, {\n      questions: questions,\n      setQuestions: setQuestions,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fgMabjBHYKSybfPWb59SMW7UWpM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MultipleChoise","TrueFalse","App","questions","setQuestions","question","option","answer","correct","page","setPage","Array","map","ele","idx"],"sources":["C:/Users/Rajiv/Desktop/t_react/t-react/src/App.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css'\r\nimport MultipleChoise from './MultipleChoise';\r\nimport TrueFalse from './TrueFalse';\r\n\r\n\r\nexport default function App() {\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      question: \"What is the nation animal?\",\r\n      option: [\"lion\", \"tiger\", \"cheeta\", \"elephant\"],\r\n      answer: \"\",\r\n      correct: \"tiger\",\r\n    },\r\n    {\r\n      question: \"Earth is round ?\",\r\n      option: [\"true\", \"false\"],\r\n      answer: \"\",\r\n      correct:\"false\",\r\n    },\r\n    {\r\n      question: \"what is the value\"\r\n    }\r\n  ]);\r\n  const [page, setPage] = useState(1);\r\n  \r\n  return (\r\n    <div className='App'>\r\n      <div className='Header'>\r\n        {\r\n          [...Array(5)].map((ele,idx)=>(\r\n            <div key={idx} className='Header-circle'><h3>{idx+1}</h3></div>\r\n          ))\r\n        }\r\n      </div>\r\n      \r\n      {page===1 && <MultipleChoise questions={questions} setQuestions={setQuestions} setPage={setPage}/> }\r\n      {page===2 && <TrueFalse questions={questions} setQuestions={setQuestions} setPage={setPage}/>}\r\n      {page===3 && <FillTheBlank questions={questions} setQuestions={setQuestions} setPage={setPage}/>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,aAAa;AAAC;AAGpC,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,CACzC;IACEM,QAAQ,EAAE,4BAA4B;IACtCC,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC;IAC/CC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACX,CAAC,EACD;IACEH,QAAQ,EAAE,kBAAkB;IAC5BC,MAAM,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;IACzBC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAC;EACV,CAAC,EACD;IACEH,QAAQ,EAAE;EACZ,CAAC,CACF,CAAC;EACF,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEnC,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAK,SAAS,EAAC,QAAQ;MAAA,UAEnB,CAAC,GAAGY,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,GAAG,EAACC,GAAG,kBACxB;QAAe,SAAS,EAAC,eAAe;QAAA,uBAAC;UAAA,UAAKA,GAAG,GAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MAAM,GAA/CA,GAAG;QAAA;QAAA;QAAA;MAAA,QACd;IAAC;MAAA;MAAA;MAAA;IAAA,QAEA,EAELL,IAAI,KAAG,CAAC,iBAAI,QAAC,cAAc;MAAC,SAAS,EAAEN,SAAU;MAAC,YAAY,EAAEC,YAAa;MAAC,OAAO,EAAEM;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,EACjGD,IAAI,KAAG,CAAC,iBAAI,QAAC,SAAS;MAAC,SAAS,EAAEN,SAAU;MAAC,YAAY,EAAEC,YAAa;MAAC,OAAO,EAAEM;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,EAC5FD,IAAI,KAAG,CAAC,iBAAI,QAAC,YAAY;MAAC,SAAS,EAAEN,SAAU;MAAC,YAAY,EAAEC,YAAa;MAAC,OAAO,EAAEM;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5F;AAEV;AAAC,GAnCuBR,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}