{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajiv\\\\Desktop\\\\t_react\\\\t-react\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = _ref => {\n  let {\n    x,\n    y,\n    maze,\n    path,\n    setPath\n  } = _ref;\n  const isStart = x === maze.start.x && y === maze.start.y;\n  const isEnd = x === maze.end.x && y === maze.end.y;\n  const isPath = path.find(p => p.x === x && p.y === y && !(isStart || isEnd));\n  const isWall = maze.walls.find(w => w.x === x && w.y === y);\n  const isVisited = path.find(p => p.x === x && p.y === y);\n  const onClick = () => {\n    if (isPath) {\n      setPath(path.filter(p => p.x !== x || p.y !== y));\n    } else if (!isWall && !isStart && !isEnd && !isVisited) {\n      setPath([...path, {\n        x,\n        y\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cell ${isStart ? \"start\" : \"\"} ${isEnd ? \"end\" : \"\"} ${isPath ? \"path\" : \"\"} ${isWall ? \"wall\" : \"\"}`,\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Cell;\nconst Maze = () => {\n  _s();\n  const [path, setPath] = useState([]);\n  const maze = {\n    start: {\n      x: 1,\n      y: 1\n    },\n    end: {\n      x: 6,\n      y: 6\n    },\n    walls: [{\n      x: 1,\n      y: 2\n    }, {\n      x: 2,\n      y: 2\n    }, {\n      x: 2,\n      y: 3\n    }, {\n      x: 3,\n      y: 3\n    }, {\n      x: 4,\n      y: 3\n    }, {\n      x: 5,\n      y: 3\n    }]\n  };\n  const solveMaze = (maze, path) => {\n    if (path.length === 0) return false;\n    const lastCell = path[path.length - 1];\n    const nextCells = [{\n      x: lastCell.x + 1,\n      y: lastCell.y\n    }, {\n      x: lastCell.x,\n      y: lastCell.y + 1\n    }, {\n      x: lastCell.x - 1,\n      y: lastCell.y\n    }, {\n      x: lastCell.x,\n      y: lastCell.y - 1\n    }];\n    for (const nextCell of nextCells) {\n      const isEnd = nextCell.x === maze.end.x && nextCell.y === maze.end.y;\n      const isWall = maze.walls.find(w => w.x === nextCell.x && w.y === nextCell.y);\n      const isVisited = path.find(p => p.x === nextCell.x && p.y === nextCell.y);\n      if (isEnd) {\n        setPath([...path, nextCell]);\n        return true;\n      }\n    }\n  };\n};\n_s(Maze, \"dobzRtCKtqj6DjQy4YxZKcscreA=\");\n_c2 = Maze;\nexport default Cell;\nvar _c, _c2;\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Maze\");","map":{"version":3,"names":["React","useState","Cell","x","y","maze","path","setPath","isStart","start","isEnd","end","isPath","find","p","isWall","walls","w","isVisited","onClick","filter","Maze","solveMaze","length","lastCell","nextCells","nextCell"],"sources":["C:/Users/Rajiv/Desktop/t_react/t-react/src/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Cell = ({ x, y, maze, path, setPath }) => {\r\n  const isStart = x === maze.start.x && y === maze.start.y;\r\n  const isEnd = x === maze.end.x && y === maze.end.y;\r\n  const isPath = path.find(\r\n    (p) => p.x === x && p.y === y && !(isStart || isEnd)\r\n  );\r\n  const isWall = maze.walls.find((w) => w.x === x && w.y === y);\r\n  const isVisited = path.find((p) => p.x === x && p.y === y);\r\n\r\n  const onClick = () => {\r\n    if (isPath) {\r\n      setPath(path.filter((p) => p.x !== x || p.y !== y));\r\n    } else if (!isWall && !isStart && !isEnd && !isVisited) {\r\n      setPath([...path, { x, y }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`cell ${isStart ? \"start\" : \"\"} ${\r\n        isEnd ? \"end\" : \"\"\r\n      } ${isPath ? \"path\" : \"\"} ${isWall ? \"wall\" : \"\"}`}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n};\r\n\r\nconst Maze = () => {\r\n  const [path, setPath] = useState([]);\r\n\r\n  const maze = {\r\n    start: { x: 1, y: 1 },\r\n    end: { x: 6, y: 6 },\r\n    walls: [\r\n      { x: 1, y: 2 },\r\n      { x: 2, y: 2 },\r\n      { x: 2, y: 3 },\r\n      { x: 3, y: 3 },\r\n      { x: 4, y: 3 },\r\n      { x: 5, y: 3 },\r\n    ],\r\n  };\r\n\r\n  const solveMaze = (maze, path) => {\r\n    if (path.length === 0) return false;\r\n\r\n    const lastCell = path[path.length - 1];\r\n    const nextCells = [\r\n      { x: lastCell.x + 1, y: lastCell.y },\r\n      { x: lastCell.x, y: lastCell.y + 1 },\r\n      { x: lastCell.x - 1, y: lastCell.y },\r\n      { x: lastCell.x, y: lastCell.y - 1 },\r\n    ];\r\n\r\n    for (const nextCell of nextCells) {\r\n      const isEnd = nextCell.x === maze.end.x && nextCell.y === maze.end.y;\r\n      const isWall = maze.walls.find(\r\n        (w) => w.x === nextCell.x && w.y === nextCell.y\r\n      );\r\n      const isVisited = path.find(\r\n        (p) => p.x === nextCell.x && p.y === nextCell.y\r\n      );\r\n\r\n      if (isEnd) {\r\n        setPath([...path, nextCell]);\r\n        return true\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Cell;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}