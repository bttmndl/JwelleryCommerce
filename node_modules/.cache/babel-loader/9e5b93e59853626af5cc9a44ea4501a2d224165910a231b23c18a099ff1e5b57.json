{"ast":null,"code":"import { DECREASE_TYPE, INCREASE_TYPE } from \"../actionType\";\nconst initialState = {\n  count: 0\n};\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case INCREASE_TYPE:\n      return {\n        ...state,\n        count: state.count + 1\n      };\n    case DECREASE_TYPE:\n      return {\n        ...state,\n        count: state.count - 1\n      };\n    default:\n      return state;\n  }\n};\nexport default counterReducer;","map":{"version":3,"names":["DECREASE_TYPE","INCREASE_TYPE","initialState","count","counterReducer","state","action","type"],"sources":["C:/Users/Rajiv/Desktop/t_react/t-react/src/Redux/Reducers/counterReducer.js"],"sourcesContent":["import { DECREASE_TYPE, INCREASE_TYPE } from \"../actionType\";\r\n\r\nconst initialState = {\r\n    count: 0,\r\n}\r\n\r\nconst counterReducer = (state=initialState, action)=>{\r\n    switch(action.type){\r\n        case INCREASE_TYPE :\r\n            return {\r\n                ...state,\r\n                count: state.count+1,\r\n            }\r\n        case DECREASE_TYPE :\r\n            return {\r\n                ...state,\r\n                count: state.count-1,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;"],"mappings":"AAAA,SAASA,aAAa,EAAEC,aAAa,QAAQ,eAAe;AAE5D,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,cAAc,GAAG,YAA8B;EAAA,IAA7BC,KAAK,uEAACH,YAAY;EAAA,IAAEI,MAAM;EAC9C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKN,aAAa;MACd,OAAO;QACH,GAAGI,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAC;MACvB,CAAC;IACL,KAAKH,aAAa;MACd,OAAO;QACH,GAAGK,KAAK;QACRF,KAAK,EAAEE,KAAK,CAACF,KAAK,GAAC;MACvB,CAAC;IACL;MACI,OAAOE,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}